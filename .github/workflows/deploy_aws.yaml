name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install Docker
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh

      - name: Pull Docker image
        run: |
          sudo docker pull ronenlabagli/python-billing:main

      - name: Run Docker container
        run: |
          sudo docker run -d -p 80:80 --name python-billing \ -v /python-billing/.env:/app/.env \ ronenlabagli/python-billing:main 

      - name: Deploy application to EC2
        run: |
          echo "ENV_VARIABLE='${{ secrets.ENV_VARIABLE }}'" >> .env
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ssh_key.pem
          chmod 400 ssh_key.pem
          ssh -o "StrictHostKeyChecking=no" -i  ssh_key.pem ec2-user@ec2-3-84-95-162.compute-1.amazonaws.com "sudo docker stop python-billing && sudo docker rm python-billing && sudo docker run -d -p 8004:8004 --name python-billing ronenlabagli/python-billing:main"

      # - name: Deploy application to EC2
      #   run: |
      #     echo "ENV_VARIABLE=${{ secrets.ENV_VARIABLE }}" >> .env
      #     echo "${{ secrets.SSH_PRIVATE_KEY }}" > ssh_key.pem
      #     chmod 400 ssh_key.pem
      #     ssh -o "StrictHostKeyChecking=no" -i ssh_key.pem ec2-user@ec2-3-84-95-162.compute-1.amazonaws.com "cd ./python-cart && git pull origin main && source venv/bin/activate && pip install -r requirements.txt"

